// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/taamai/pkg/models/shared"
	"net/http"
)

var AllTemplatesServerList = []string{
	"https://taam.ai/api",
}

type AllTemplatesRequest struct {
	UserID int `queryParam:"style=form,explode=true,name=user_id"`
}

func (o *AllTemplatesRequest) GetUserID() int {
	if o == nil {
		return 0
	}
	return o.UserID
}

// AllTemplatesAllTemplates - OK
type AllTemplatesAllTemplates struct {
	Code    string         `json:"code"`
	Data    []shared.Datum `json:"data"`
	Message string         `json:"message"`
	Status  string         `json:"status"`
}

func (o *AllTemplatesAllTemplates) GetCode() string {
	if o == nil {
		return ""
	}
	return o.Code
}

func (o *AllTemplatesAllTemplates) GetData() []shared.Datum {
	if o == nil {
		return []shared.Datum{}
	}
	return o.Data
}

func (o *AllTemplatesAllTemplates) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

func (o *AllTemplatesAllTemplates) GetStatus() string {
	if o == nil {
		return ""
	}
	return o.Status
}

type AllTemplatesResponse struct {
	// OK
	AllTemplates *AllTemplatesAllTemplates
	// HTTP response content type for this operation
	ContentType string
	Headers     map[string][]string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *AllTemplatesResponse) GetAllTemplates() *AllTemplatesAllTemplates {
	if o == nil {
		return nil
	}
	return o.AllTemplates
}

func (o *AllTemplatesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *AllTemplatesResponse) GetHeaders() map[string][]string {
	if o == nil {
		return nil
	}
	return o.Headers
}

func (o *AllTemplatesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *AllTemplatesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
