// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

var UpdateProductServerList = []string{
	"http://127.0.0.1:8000/api",
}

type UpdateProductRequest struct {
	BulletPoints   int    `queryParam:"style=form,explode=true,name=bullet_points"`
	Description    string `queryParam:"style=form,explode=true,name=description"`
	Name           string `queryParam:"style=form,explode=true,name=name"`
	ProductID      int    `queryParam:"style=form,explode=true,name=product_id"`
	Tags0          string `queryParam:"style=form,explode=true,name=tags[0]"`
	TargetAudience string `queryParam:"style=form,explode=true,name=target_audience"`
	UserID         int    `queryParam:"style=form,explode=true,name=user_id"`
}

func (o *UpdateProductRequest) GetBulletPoints() int {
	if o == nil {
		return 0
	}
	return o.BulletPoints
}

func (o *UpdateProductRequest) GetDescription() string {
	if o == nil {
		return ""
	}
	return o.Description
}

func (o *UpdateProductRequest) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *UpdateProductRequest) GetProductID() int {
	if o == nil {
		return 0
	}
	return o.ProductID
}

func (o *UpdateProductRequest) GetTags0() string {
	if o == nil {
		return ""
	}
	return o.Tags0
}

func (o *UpdateProductRequest) GetTargetAudience() string {
	if o == nil {
		return ""
	}
	return o.TargetAudience
}

func (o *UpdateProductRequest) GetUserID() int {
	if o == nil {
		return 0
	}
	return o.UserID
}

// UpdateProductUpdateProduct - OK
type UpdateProductUpdateProduct struct {
	Message string `json:"message"`
	Status  string `json:"status"`
}

func (o *UpdateProductUpdateProduct) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

func (o *UpdateProductUpdateProduct) GetStatus() string {
	if o == nil {
		return ""
	}
	return o.Status
}

type UpdateProductResponse struct {
	// HTTP response content type for this operation
	ContentType string
	Headers     map[string][]string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	UpdateProduct *UpdateProductUpdateProduct
}

func (o *UpdateProductResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateProductResponse) GetHeaders() map[string][]string {
	if o == nil {
		return nil
	}
	return o.Headers
}

func (o *UpdateProductResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateProductResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UpdateProductResponse) GetUpdateProduct() *UpdateProductUpdateProduct {
	if o == nil {
		return nil
	}
	return o.UpdateProduct
}
