// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

var CreateWorkbookServerList = []string{
	"http://127.0.0.1:8000/api",
}

type CreateWorkbookRequest struct {
	UserID       int    `queryParam:"style=form,explode=true,name=user_id"`
	WorkbookName string `queryParam:"style=form,explode=true,name=workbook_name"`
}

func (o *CreateWorkbookRequest) GetUserID() int {
	if o == nil {
		return 0
	}
	return o.UserID
}

func (o *CreateWorkbookRequest) GetWorkbookName() string {
	if o == nil {
		return ""
	}
	return o.WorkbookName
}

type CreateWorkbookCreateWorkbooklivwData struct {
	CreatedAt string `json:"created_at"`
	ID        int    `json:"id"`
	Name      string `json:"name"`
	UpdatedAt string `json:"updated_at"`
	UserID    string `json:"user_id"`
}

func (o *CreateWorkbookCreateWorkbooklivwData) GetCreatedAt() string {
	if o == nil {
		return ""
	}
	return o.CreatedAt
}

func (o *CreateWorkbookCreateWorkbooklivwData) GetID() int {
	if o == nil {
		return 0
	}
	return o.ID
}

func (o *CreateWorkbookCreateWorkbooklivwData) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CreateWorkbookCreateWorkbooklivwData) GetUpdatedAt() string {
	if o == nil {
		return ""
	}
	return o.UpdatedAt
}

func (o *CreateWorkbookCreateWorkbooklivwData) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

// CreateWorkbookCreateWorkbooklivw - OK
type CreateWorkbookCreateWorkbooklivw struct {
	Data    CreateWorkbookCreateWorkbooklivwData `json:"data"`
	Message string                               `json:"message"`
	Status  string                               `json:"status"`
}

func (o *CreateWorkbookCreateWorkbooklivw) GetData() CreateWorkbookCreateWorkbooklivwData {
	if o == nil {
		return CreateWorkbookCreateWorkbooklivwData{}
	}
	return o.Data
}

func (o *CreateWorkbookCreateWorkbooklivw) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

func (o *CreateWorkbookCreateWorkbooklivw) GetStatus() string {
	if o == nil {
		return ""
	}
	return o.Status
}

type CreateWorkbookResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// OK
	CreateWorkbooklivw *CreateWorkbookCreateWorkbooklivw
	Headers            map[string][]string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *CreateWorkbookResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CreateWorkbookResponse) GetCreateWorkbooklivw() *CreateWorkbookCreateWorkbooklivw {
	if o == nil {
		return nil
	}
	return o.CreateWorkbooklivw
}

func (o *CreateWorkbookResponse) GetHeaders() map[string][]string {
	if o == nil {
		return nil
	}
	return o.Headers
}

func (o *CreateWorkbookResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CreateWorkbookResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
