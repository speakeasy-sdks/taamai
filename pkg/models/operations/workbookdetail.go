// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/taamai/pkg/models/shared"
	"net/http"
)

var WorkbookDetailServerList = []string{
	"http://127.0.0.1:8000/api",
}

type WorkbookDetailRequest struct {
	UserID     int `queryParam:"style=form,explode=true,name=user_id"`
	WorkbookID int `queryParam:"style=form,explode=true,name=workbook_id"`
}

func (o *WorkbookDetailRequest) GetUserID() int {
	if o == nil {
		return 0
	}
	return o.UserID
}

func (o *WorkbookDetailRequest) GetWorkbookID() int {
	if o == nil {
		return 0
	}
	return o.WorkbookID
}

type Data1 struct {
	CreatedAt string           `json:"created_at"`
	Default   int              `json:"default"`
	DeletedAt *string          `json:"deleted_at"`
	Folders   []shared.Folder2 `json:"folders"`
	ID        int              `json:"id"`
	Name      string           `json:"name"`
	UpdatedAt string           `json:"updated_at"`
	UserID    int              `json:"user_id"`
}

func (o *Data1) GetCreatedAt() string {
	if o == nil {
		return ""
	}
	return o.CreatedAt
}

func (o *Data1) GetDefault() int {
	if o == nil {
		return 0
	}
	return o.Default
}

func (o *Data1) GetDeletedAt() *string {
	if o == nil {
		return nil
	}
	return o.DeletedAt
}

func (o *Data1) GetFolders() []shared.Folder2 {
	if o == nil {
		return []shared.Folder2{}
	}
	return o.Folders
}

func (o *Data1) GetID() int {
	if o == nil {
		return 0
	}
	return o.ID
}

func (o *Data1) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *Data1) GetUpdatedAt() string {
	if o == nil {
		return ""
	}
	return o.UpdatedAt
}

func (o *Data1) GetUserID() int {
	if o == nil {
		return 0
	}
	return o.UserID
}

// WorkbookDetailWorkbookDetaillive - OK
type WorkbookDetailWorkbookDetaillive struct {
	Data    Data1  `json:"data"`
	Message string `json:"message"`
	Status  string `json:"status"`
}

func (o *WorkbookDetailWorkbookDetaillive) GetData() Data1 {
	if o == nil {
		return Data1{}
	}
	return o.Data
}

func (o *WorkbookDetailWorkbookDetaillive) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

func (o *WorkbookDetailWorkbookDetaillive) GetStatus() string {
	if o == nil {
		return ""
	}
	return o.Status
}

type WorkbookDetailResponse struct {
	// HTTP response content type for this operation
	ContentType string
	Headers     map[string][]string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	WorkbookDetaillive *WorkbookDetailWorkbookDetaillive
}

func (o *WorkbookDetailResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *WorkbookDetailResponse) GetHeaders() map[string][]string {
	if o == nil {
		return map[string][]string{}
	}
	return o.Headers
}

func (o *WorkbookDetailResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *WorkbookDetailResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *WorkbookDetailResponse) GetWorkbookDetaillive() *WorkbookDetailWorkbookDetaillive {
	if o == nil {
		return nil
	}
	return o.WorkbookDetaillive
}
