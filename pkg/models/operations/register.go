// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/taamai/pkg/models/shared"
	"net/http"
)

var RegisterServerList = []string{
	"https://taam.ai/api",
}

type RegisterRequest struct {
	Country   string `queryParam:"style=form,explode=true,name=country"`
	Email     string `queryParam:"style=form,explode=true,name=email"`
	Name      string `queryParam:"style=form,explode=true,name=name"`
	Password  string `queryParam:"style=form,explode=true,name=password"`
	Subdomain string `queryParam:"style=form,explode=true,name=subdomain"`
}

func (o *RegisterRequest) GetCountry() string {
	if o == nil {
		return ""
	}
	return o.Country
}

func (o *RegisterRequest) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *RegisterRequest) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *RegisterRequest) GetPassword() string {
	if o == nil {
		return ""
	}
	return o.Password
}

func (o *RegisterRequest) GetSubdomain() string {
	if o == nil {
		return ""
	}
	return o.Subdomain
}

type User2 struct {
	AvailableChars           int           `json:"available_chars"`
	AvailableCharsPrepaid    string        `json:"available_chars_prepaid"`
	AvailableImages          int           `json:"available_images"`
	AvailableImagesPrepaid   string        `json:"available_images_prepaid"`
	AvailableMinutes         int           `json:"available_minutes"`
	AvailableMinutesPrepaid  string        `json:"available_minutes_prepaid"`
	AvailableWords           int           `json:"available_words"`
	AvailableWordsPrepaid    string        `json:"available_words_prepaid"`
	Country                  string        `json:"country"`
	CreatedAt                string        `json:"created_at"`
	DefaultVoiceoverLanguage string        `json:"default_voiceover_language"`
	DefaultVoiceoverVoice    string        `json:"default_voiceover_voice"`
	Email                    string        `json:"email"`
	EmailVerifiedAt          string        `json:"email_verified_at"`
	Group                    string        `json:"group"`
	ID                       int           `json:"id"`
	JobRole                  string        `json:"job_role"`
	Name                     string        `json:"name"`
	PlanID                   int           `json:"plan_id"`
	ReferralID               string        `json:"referral_id"`
	ReferredBy               string        `json:"referred_by"`
	Roles                    []shared.Role `json:"roles"`
	Status                   string        `json:"status"`
	TotalChars               int           `json:"total_chars"`
	TotalImages              int           `json:"total_images"`
	TotalMinutes             int           `json:"total_minutes"`
	TotalWords               int           `json:"total_words"`
	UpdatedAt                string        `json:"updated_at"`
	Workbook                 string        `json:"workbook"`
	WorkbookFolderID         int           `json:"workbook_folder_id"`
	WorkbookID               int           `json:"workbook_id"`
}

func (o *User2) GetAvailableChars() int {
	if o == nil {
		return 0
	}
	return o.AvailableChars
}

func (o *User2) GetAvailableCharsPrepaid() string {
	if o == nil {
		return ""
	}
	return o.AvailableCharsPrepaid
}

func (o *User2) GetAvailableImages() int {
	if o == nil {
		return 0
	}
	return o.AvailableImages
}

func (o *User2) GetAvailableImagesPrepaid() string {
	if o == nil {
		return ""
	}
	return o.AvailableImagesPrepaid
}

func (o *User2) GetAvailableMinutes() int {
	if o == nil {
		return 0
	}
	return o.AvailableMinutes
}

func (o *User2) GetAvailableMinutesPrepaid() string {
	if o == nil {
		return ""
	}
	return o.AvailableMinutesPrepaid
}

func (o *User2) GetAvailableWords() int {
	if o == nil {
		return 0
	}
	return o.AvailableWords
}

func (o *User2) GetAvailableWordsPrepaid() string {
	if o == nil {
		return ""
	}
	return o.AvailableWordsPrepaid
}

func (o *User2) GetCountry() string {
	if o == nil {
		return ""
	}
	return o.Country
}

func (o *User2) GetCreatedAt() string {
	if o == nil {
		return ""
	}
	return o.CreatedAt
}

func (o *User2) GetDefaultVoiceoverLanguage() string {
	if o == nil {
		return ""
	}
	return o.DefaultVoiceoverLanguage
}

func (o *User2) GetDefaultVoiceoverVoice() string {
	if o == nil {
		return ""
	}
	return o.DefaultVoiceoverVoice
}

func (o *User2) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *User2) GetEmailVerifiedAt() string {
	if o == nil {
		return ""
	}
	return o.EmailVerifiedAt
}

func (o *User2) GetGroup() string {
	if o == nil {
		return ""
	}
	return o.Group
}

func (o *User2) GetID() int {
	if o == nil {
		return 0
	}
	return o.ID
}

func (o *User2) GetJobRole() string {
	if o == nil {
		return ""
	}
	return o.JobRole
}

func (o *User2) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *User2) GetPlanID() int {
	if o == nil {
		return 0
	}
	return o.PlanID
}

func (o *User2) GetReferralID() string {
	if o == nil {
		return ""
	}
	return o.ReferralID
}

func (o *User2) GetReferredBy() string {
	if o == nil {
		return ""
	}
	return o.ReferredBy
}

func (o *User2) GetRoles() []shared.Role {
	if o == nil {
		return []shared.Role{}
	}
	return o.Roles
}

func (o *User2) GetStatus() string {
	if o == nil {
		return ""
	}
	return o.Status
}

func (o *User2) GetTotalChars() int {
	if o == nil {
		return 0
	}
	return o.TotalChars
}

func (o *User2) GetTotalImages() int {
	if o == nil {
		return 0
	}
	return o.TotalImages
}

func (o *User2) GetTotalMinutes() int {
	if o == nil {
		return 0
	}
	return o.TotalMinutes
}

func (o *User2) GetTotalWords() int {
	if o == nil {
		return 0
	}
	return o.TotalWords
}

func (o *User2) GetUpdatedAt() string {
	if o == nil {
		return ""
	}
	return o.UpdatedAt
}

func (o *User2) GetWorkbook() string {
	if o == nil {
		return ""
	}
	return o.Workbook
}

func (o *User2) GetWorkbookFolderID() int {
	if o == nil {
		return 0
	}
	return o.WorkbookFolderID
}

func (o *User2) GetWorkbookID() int {
	if o == nil {
		return 0
	}
	return o.WorkbookID
}

// RegisterExamplewithdefaultplansubdomainandsubsctpion - OK
type RegisterExamplewithdefaultplansubdomainandsubsctpion struct {
	AccessToken string `json:"access_token"`
	Message     string `json:"message"`
	Result      bool   `json:"result"`
	User        User2  `json:"user"`
}

func (o *RegisterExamplewithdefaultplansubdomainandsubsctpion) GetAccessToken() string {
	if o == nil {
		return ""
	}
	return o.AccessToken
}

func (o *RegisterExamplewithdefaultplansubdomainandsubsctpion) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

func (o *RegisterExamplewithdefaultplansubdomainandsubsctpion) GetResult() bool {
	if o == nil {
		return false
	}
	return o.Result
}

func (o *RegisterExamplewithdefaultplansubdomainandsubsctpion) GetUser() User2 {
	if o == nil {
		return User2{}
	}
	return o.User
}

type RegisterResponse struct {
	// HTTP response content type for this operation
	ContentType string
	Headers     map[string][]string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	Examplewithdefaultplansubdomainandsubsctpion *RegisterExamplewithdefaultplansubdomainandsubsctpion
}

func (o *RegisterResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *RegisterResponse) GetHeaders() map[string][]string {
	if o == nil {
		return nil
	}
	return o.Headers
}

func (o *RegisterResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *RegisterResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *RegisterResponse) GetExamplewithdefaultplansubdomainandsubsctpion() *RegisterExamplewithdefaultplansubdomainandsubsctpion {
	if o == nil {
		return nil
	}
	return o.Examplewithdefaultplansubdomainandsubsctpion
}
