// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/taamai/pkg/models/shared"
	"net/http"
)

var WorkbooktranscriptsServerList = []string{
	"https://taam.ai/api",
}

type WorkbooktranscriptsRequest struct {
	FolderID   int    `queryParam:"style=form,explode=true,name=folder_id"`
	Type       string `queryParam:"style=form,explode=true,name=type"`
	UserID     int    `queryParam:"style=form,explode=true,name=user_id"`
	WorkbookID string `queryParam:"style=form,explode=true,name=workbook_id"`
}

func (o *WorkbooktranscriptsRequest) GetFolderID() int {
	if o == nil {
		return 0
	}
	return o.FolderID
}

func (o *WorkbooktranscriptsRequest) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

func (o *WorkbooktranscriptsRequest) GetUserID() int {
	if o == nil {
		return 0
	}
	return o.UserID
}

func (o *WorkbooktranscriptsRequest) GetWorkbookID() string {
	if o == nil {
		return ""
	}
	return o.WorkbookID
}

// WorkbooktranscriptsWorkbooktranscripts - OK
type WorkbooktranscriptsWorkbooktranscripts struct {
	Count   int            `json:"count"`
	Data    []shared.Data7 `json:"data"`
	Message string         `json:"message"`
	Status  string         `json:"status"`
}

func (o *WorkbooktranscriptsWorkbooktranscripts) GetCount() int {
	if o == nil {
		return 0
	}
	return o.Count
}

func (o *WorkbooktranscriptsWorkbooktranscripts) GetData() []shared.Data7 {
	if o == nil {
		return []shared.Data7{}
	}
	return o.Data
}

func (o *WorkbooktranscriptsWorkbooktranscripts) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

func (o *WorkbooktranscriptsWorkbooktranscripts) GetStatus() string {
	if o == nil {
		return ""
	}
	return o.Status
}

type WorkbooktranscriptsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	Headers     map[string][]string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	Workbooktranscripts *WorkbooktranscriptsWorkbooktranscripts
}

func (o *WorkbooktranscriptsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *WorkbooktranscriptsResponse) GetHeaders() map[string][]string {
	if o == nil {
		return nil
	}
	return o.Headers
}

func (o *WorkbooktranscriptsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *WorkbooktranscriptsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *WorkbooktranscriptsResponse) GetWorkbooktranscripts() *WorkbooktranscriptsWorkbooktranscripts {
	if o == nil {
		return nil
	}
	return o.Workbooktranscripts
}
